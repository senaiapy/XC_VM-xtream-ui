#!/home/xc_vm/bin/php/bin/php
<?php

if (posix_getpwuid(posix_geteuid())['name'] == 'root') {
	set_time_limit(0);

	if ($argc) {
		$rReload = false;
		$rFirstRun = false;

		if (isset($argv[1])) {
			$rFirstRun = true;
		}

		require str_replace('\\', '/', dirname($argv[0])) . '/www/stream/init.php';
		ini_set('display_startup_errors', 1);
		ini_set('display_errors', 1);
		error_reporting(32767);

		if (!$rFirstRun) {
			echo "\n" . 'Status' . "\n" . '------------------------------' . "\n";

			if (isrunning()) {
				echo 'XC_VM is running.' . "\n\n";
			} else {
				echo 'XC_VM is not running.' . "\n\n";
			}
		} else {
			echo "\n";
		}

		echo 'Database' . "\n" . '------------------------------' . "\n";
		CoreUtilities::connectDatabase();

		if (!CoreUtilities::$db->connected) {
			echo "Couldn't connect to database. Please add them to config.ini." . "\n\n";

			exit();
		}

		echo 'Connected successfully.' . "\n\n";
		$rServers = abc6134f1458b898();

		if ($rServers[SERVER_ID]['is_main']) {
			CoreUtilities::$db->query("SHOW INDEXES IN `servers` WHERE `key_name` = 'private_ip';");

			if (0 >= CoreUtilities::$db->num_rows()) {
			} else {
				CoreUtilities::$db->query('ALTER TABLE `servers` DROP INDEX `private_ip`;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'hide_failures';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `hide_failures` TINYINT(4) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'legacy_panel_api';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `legacy_panel_api` TINYINT(4) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `lines` LIKE 'allowed_outputs';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `lines` ADD COLUMN `allowed_outputs` MEDIUMTEXT NULL DEFAULT NULL AFTER `bouquet`;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'check_connections';");

			if (0 >= CoreUtilities::$db->num_rows()) {
			} else {
				CoreUtilities::$db->query('ALTER TABLE `settings` DROP COLUMN `check_connections`;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `users` LIKE 'api_key';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `users` ADD COLUMN `api_key` VARCHAR(64) NULL DEFAULT '';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'api_probe';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `api_probe` TINYINT(4) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `servers` LIKE 'last_status';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `servers` ADD COLUMN `last_status` TINYINT(4) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'max_simultaneous_downloads';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `max_simultaneous_downloads` TINYINT(4) NULL DEFAULT '2';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'restart_php_fpm';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `restart_php_fpm` TINYINT(4) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `mysql_syslog` LIKE 'server_id';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `mysql_syslog` ADD COLUMN `server_id` TINYINT(4) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'cache_playlists';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `cache_playlists` INT(11) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'send_xc_vm_header';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `send_xc_vm_header` INT(11) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'request_prebuffer';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `request_prebuffer` INT(11) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'debug_show_errors';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `debug_show_errors` TINYINT(4) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'block_streaming_servers';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `block_streaming_servers` TINYINT(4) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'block_proxies';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `block_proxies` TINYINT(4) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'ip_subnet_match';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `ip_subnet_match` TINYINT(4) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'last_cache';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `last_cache` INT(11) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'last_cache_taken';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `last_cache_taken` INT(11) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'ministra_allow_blank';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `ministra_allow_blank` INT(11) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'enable_redis';");

			if (CoreUtilities::$db->num_rows() != 1) {
			} else {
				CoreUtilities::$db->query('ALTER TABLE `settings` DROP COLUMN `enable_redis`;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'enable_cache';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `enable_cache` TINYINT(4) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'legacy_mag_auth';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `legacy_mag_auth` TINYINT(4) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'ignore_invalid_users';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `ignore_invalid_users` TINYINT(4) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'on_demand_instant_off';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `on_demand_instant_off` TINYINT(4) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'on_demand_failure_exit';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `on_demand_failure_exit` TINYINT(4) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'on_demand_wait_time';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `on_demand_wait_time` TINYINT(4) NULL DEFAULT '20';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'playlist_from_mysql';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `playlist_from_mysql` TINYINT(4) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'show_images';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `show_images` TINYINT(4) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'kill_rogue_ffmpeg';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `kill_rogue_ffmpeg` TINYINT(4) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'monitor_connection_status';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `monitor_connection_status` TINYINT(4) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'stream_fail_sleep';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `stream_fail_sleep` TINYINT(4) NULL DEFAULT '10';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'confirm_source';");

			if (CoreUtilities::$db->num_rows() != 1) {
			} else {
				CoreUtilities::$db->query('ALTER TABLE `settings` DROP COLUMN `confirm_source`;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'custom_ip_header';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `custom_ip_header` VARCHAR(256) NULL DEFAULT '';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'send_protection_headers';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `send_protection_headers` TINYINT(4) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'send_altsvc_header';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `send_altsvc_header` TINYINT(4) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'send_server_header';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `send_server_header` VARCHAR(256) NULL DEFAULT '';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'send_unique_header';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `send_unique_header` VARCHAR(256) NULL DEFAULT '';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'send_unique_header_domain';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `send_unique_header_domain` VARCHAR(256) NULL DEFAULT '';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'max_items';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `max_items` INT(11) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'restrict_playlists';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `restrict_playlists` TINYINT(4) NULL DEFAULT '1';");
			}

			if (file_exists(MAIN_HOME . 'bin/nginx/conf/codes/c.conf')) {
				CoreUtilities::$db->query("DELETE FROM `access_codes` WHERE `code` = 'c';");
				unlink(MAIN_HOME . 'bin/nginx/conf/codes/c.conf');
				$rReload = true;
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'mag_legacy_access';");

			if (CoreUtilities::$db->num_rows() != 1) {
			} else {
				CoreUtilities::$db->query('ALTER TABLE `settings` DROP COLUMN `mag_legacy_access`;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'mag_legacy_redirect';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `mag_legacy_redirect` TINYINT(4) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'save_login_logs';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `save_login_logs` TINYINT(4) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'save_restart_logs';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `save_restart_logs` TINYINT(4) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'keep_activity';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `keep_activity` INT(11) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'keep_client';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `keep_client` INT(11) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'keep_login';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `keep_login` INT(11) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'keep_errors';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `keep_errors` INT(11) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'keep_restarts';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `keep_restarts` INT(11) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `servers` LIKE 'time_offset';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `servers` ADD COLUMN `time_offset` INT(11) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `servers` LIKE 'ping';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `servers` ADD COLUMN `ping` INT(11) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `servers` LIKE 'requests_per_second';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `servers` ADD COLUMN `requests_per_second` INT(11) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `signals` LIKE 'cache';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `signals` ADD COLUMN `cache` TINYINT(4) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `servers_stats` LIKE 'total_users';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `servers_stats` ADD COLUMN `total_users` INT(11) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `lines` LIKE 'last_activity';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `lines` ADD COLUMN `last_activity` INT(11) NULL DEFAULT NULL;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `streams` LIKE 'year';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `streams` ADD COLUMN `year` INT(4) NULL DEFAULT NULL;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `streams` LIKE 'rating';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `streams` ADD COLUMN `rating` FLOAT(8) NOT NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `streams_series` LIKE 'year';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `streams_series` ADD COLUMN `year` INT(4) NULL DEFAULT NULL;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `watch_folders` LIKE 'auto_upgrade';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `watch_folders` ADD COLUMN `auto_upgrade` TINYINT(4) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `watch_folders` LIKE 'fallback_title';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `watch_folders` ADD COLUMN `fallback_title` TINYINT(4) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'ignore_keyframes';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `ignore_keyframes` INT(11) NULL DEFAULT '0';");
				CoreUtilities::$db->query("ALTER TABLE `users_packages` CHANGE COLUMN `is_addon` `is_addon` TINYINT(4) NULL DEFAULT '0', CHANGE COLUMN `is_trial` `is_trial` TINYINT(4) NULL DEFAULT '0', CHANGE COLUMN `is_official` `is_official` TINYINT(4) NULL DEFAULT '0', CHANGE COLUMN `trial_credits` `trial_credits` FLOAT NULL DEFAULT '0', CHANGE COLUMN `official_credits` `official_credits` FLOAT NULL DEFAULT '0', CHANGE COLUMN `trial_duration` `trial_duration` INT(11) NULL DEFAULT '0', CHANGE COLUMN `official_duration` `official_duration` INT(11) NULL DEFAULT '0';");
				CoreUtilities::$db->query("ALTER TABLE `access_codes` CHANGE COLUMN `type` `type` TINYINT(4) NULL DEFAULT '0', CHANGE COLUMN `enabled` `enabled` TINYINT(4) NULL DEFAULT '0';");
				CoreUtilities::$db->query('ALTER TABLE `blocked_asns` CHANGE COLUMN `isp` `isp` VARCHAR(256) NULL DEFAULT NULL, CHANGE COLUMN `domain` `domain` VARCHAR(256) NULL DEFAULT NULL, CHANGE COLUMN `country` `country` VARCHAR(16) NULL DEFAULT NULL, CHANGE COLUMN `type` `type` VARCHAR(64) NULL DEFAULT NULL;');
				CoreUtilities::$db->query('ALTER TABLE `epg_channels` CHANGE COLUMN `epg_id` `epg_id` INT(8) NULL DEFAULT NULL, CHANGE COLUMN `channel_id` `channel_id` VARCHAR(64) NULL DEFAULT NULL, CHANGE COLUMN `name` `name` VARCHAR(256) NULL DEFAULT NULL;');
				CoreUtilities::$db->query('ALTER TABLE `panel_stats` CHANGE COLUMN `type` `type` VARCHAR(16) NULL DEFAULT NULL;');
				CoreUtilities::$db->query('ALTER TABLE `streams_stats` CHANGE COLUMN `type` `type` VARCHAR(16) NULL DEFAULT NULL;');
				CoreUtilities::$db->query('ALTER TABLE `users` CHANGE COLUMN `api_key` `api_key` VARCHAR(64) NULL DEFAULT NULL;');
				CoreUtilities::$db->query('ALTER TABLE `watch_categories` CHANGE COLUMN `genre` `genre` VARCHAR(64) NULL DEFAULT NULL;');
				CoreUtilities::$db->query('ALTER TABLE `watch_folders` CHANGE COLUMN `type` `type` VARCHAR(32) NULL DEFAULT NULL, CHANGE COLUMN `directory` `directory` VARCHAR(2048) NULL DEFAULT NULL, CHANGE COLUMN `rclone_dir` `rclone_dir` VARCHAR(2048) NULL DEFAULT NULL;');
				CoreUtilities::$db->query('ALTER TABLE `watch_logs` CHANGE COLUMN `filename` `filename` VARCHAR(4096) NULL DEFAULT NULL;');
				CoreUtilities::$db->query('ALTER TABLE `mag_devices` CHANGE COLUMN `token` `token` VARCHAR(32) NULL DEFAULT NULL;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'seg_delete_threshold';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `seg_delete_threshold` INT(11) NULL DEFAULT '4';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'fails_per_time';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `fails_per_time` INT(11) NULL DEFAULT '86400';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `streams` LIKE 'plex_uuid';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `streams` ADD COLUMN `plex_uuid` VARCHAR(256) NULL DEFAULT '';");
				CoreUtilities::$db->query("ALTER TABLE `streams_series` ADD COLUMN `plex_uuid` VARCHAR(256) NULL DEFAULT '';");
				CoreUtilities::$db->query('ALTER TABLE `watch_folders` ADD COLUMN `plex_ip` VARCHAR(128) NULL DEFAULT NULL;');
				CoreUtilities::$db->query("ALTER TABLE `watch_folders` ADD COLUMN `plex_port` INT(5) NULL DEFAULT '0';");
				CoreUtilities::$db->query('ALTER TABLE `watch_folders` ADD COLUMN `plex_username` VARCHAR(256) NULL DEFAULT NULL;');
				CoreUtilities::$db->query('ALTER TABLE `watch_folders` ADD COLUMN `plex_password` VARCHAR(256) NULL DEFAULT NULL;');
				CoreUtilities::$db->query('ALTER TABLE `watch_folders` ADD COLUMN `plex_libraries` MEDIUMTEXT NULL DEFAULT NULL;');
				CoreUtilities::$db->query("ALTER TABLE `watch_folders` ADD COLUMN `scan_missing` TINYINT(4) NULL DEFAULT '0';");
				CoreUtilities::$db->query("ALTER TABLE `watch_folders` ADD COLUMN `extract_metadata` TINYINT(4) NULL DEFAULT '0';");
				CoreUtilities::$db->query("INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (3, 1, 'Action', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (3, 2, 'Action / Adventure', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (3, 3, 'Adventure', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (3, 4, 'Animation', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (3, 5, 'Anime', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (3, 6, 'Biography', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (3, 7, 'Children', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (3, 8, 'Comedy', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (3, 9, 'Crime', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (3, 10, 'Documentary', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (3, 11, 'Drama', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (3, 12, 'Family', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (3, 13, 'Fantasy', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (3, 14, 'History', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (3, 15, 'Horror', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (3, 16, 'Martial Arts', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (3, 17, 'Music', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (3, 18, 'Musical', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (3, 19, 'Mystery', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (3, 20, 'News', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (3, 21, 'Non-Fiction', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (3, 22, 'Reality', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (3, 23, 'Romance', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (3, 24, 'Science Fiction', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (3, 25, 'Short', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (3, 26, 'Sport', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (3, 27, 'Talk Show', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (3, 28, 'Thriller', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (3, 29, 'TV Movie', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (3, 30, 'War', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (3, 31, 'Western', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 1, 'Action', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 2, 'Action & Adventure', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 3, 'Adventure', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 4, 'Animation', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 5, 'Anime', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 6, 'Biography', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 7, 'Children', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 8, 'Comedy', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 9, 'Crime', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 10, 'Documentary', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 11, 'Drama', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 12, 'Family', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 13, 'Fantasy', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 14, 'Food', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 15, 'Game Show', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 16, 'History', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 17, 'Home and Garden', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 18, 'Horror', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 19, 'Indie', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 20, 'Martial Arts', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 21, 'Mini-Series', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 22, 'Musical', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 23, 'Mystery', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 24, 'News', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 25, 'Reality', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 26, 'Romance', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 27, 'Science Fiction', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 28, 'Sci-Fi & Fantasy', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 29, 'Soap', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 30, 'Special Interest', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 31, 'Sport', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 32, 'Suspense', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 33, 'Talk', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 34, 'Talk Show', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 35, 'Thriller', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 36, 'Thriller', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 37, 'Travel', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 38, 'War', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 39, 'War & Politics', 0, '[]'); INSERT INTO `watch_categories` (`type`, `genre_id`, `genre`, `category_id`, `bouquets`) VALUES (4, 40, 'Western', 0, '[]');");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'segment_type';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `segment_type` TINYINT(1) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `watch_folders` LIKE 'store_categories';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `watch_folders` ADD COLUMN `store_categories` TINYINT(1) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'thread_count_movie';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `thread_count_movie` TINYINT(3) NULL DEFAULT '5';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'thread_count_show';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `thread_count_show` TINYINT(3) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `watch_folders` LIKE 'duplicate_tmdb';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `watch_folders` ADD COLUMN `duplicate_tmdb` TINYINT(1) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'redirect_timeout';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `redirect_timeout` TINYINT(1) NULL DEFAULT '5';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'create_expiration';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `create_expiration` TINYINT(3) NULL DEFAULT '5';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'redis_handler';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `redis_handler` TINYINT(1) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'redis_password';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `redis_password` VARCHAR(512) NULL DEFAULT '';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `lines_live` LIKE 'uuid';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `lines_live` ADD COLUMN `uuid` VARCHAR(32) NULL DEFAULT NULL, ADD INDEX `uuid` (`uuid`);');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `streams` LIKE 'uuid';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `streams` ADD COLUMN `uuid` VARCHAR(32) NULL DEFAULT NULL, ADD INDEX `uuid` (`uuid`);');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `watch_folders` LIKE 'fallback_movie';");

			if (CoreUtilities::$db->num_rows() != 1) {
			} else {
				CoreUtilities::$db->query('ALTER TABLE `watch_folders` DROP COLUMN `fallback_movie`;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `watch_folders` LIKE 'fallback_show';");

			if (CoreUtilities::$db->num_rows() != 1) {
			} else {
				CoreUtilities::$db->query('ALTER TABLE `watch_folders` DROP COLUMN `fallback_show`;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'force_epg_timezone';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `force_epg_timezone` TINYINT(1) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'check_vod';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `check_vod` TINYINT(1) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `epg` LIKE 'offset';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `epg` ADD COLUMN `offset` INT(11) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `streams` LIKE 'epg_offset';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `streams` ADD COLUMN `epg_offset` INT(11) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'max_encode_movies';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `max_encode_movies` INT(11) NULL DEFAULT '10';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'max_encode_cc';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `max_encode_cc` INT(11) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'queue_loop';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `queue_loop` INT(11) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `watch_folders` LIKE 'check_tmdb';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `watch_folders` ADD COLUMN `check_tmdb` TINYINT(1) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'cache_thread_count';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `cache_thread_count` INT(4) NULL DEFAULT '4';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'cache_changes';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `cache_changes` TINYINT(1) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `streams` LIKE 'updated';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `streams` ADD COLUMN `updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP;');
				CoreUtilities::$db->query('UPDATE `streams` SET `updated` = CURRENT_TIMESTAMP;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `streams_servers` LIKE 'updated';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `streams_servers` ADD COLUMN `updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP;');
				CoreUtilities::$db->query('UPDATE `streams_servers` SET `updated` = CURRENT_TIMESTAMP;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `lines` LIKE 'updated';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `lines` ADD COLUMN `updated` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP;');
				CoreUtilities::$db->query('UPDATE `lines` SET `updated` = CURRENT_TIMESTAMP;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'player_blur';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `player_blur` TINYINT(1) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'player_opacity';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `player_opacity` TINYINT(1) NULL DEFAULT '10';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'player_allow_playlist';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `player_allow_playlist` TINYINT(1) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'player_allow_bouquet';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `player_allow_bouquet` TINYINT(1) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'player_hide_incompatible';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `player_hide_incompatible` TINYINT(1) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'player_allow_hevc';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `player_allow_hevc` TINYINT(1) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `streams_servers` LIKE 'compatible';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `streams_servers` ADD COLUMN `compatible` TINYINT(1) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'read_native_hls';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `read_native_hls` TINYINT(1) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'keep_protocol';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `keep_protocol` TINYINT(1) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `streams` LIKE 'similar';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `streams` ADD COLUMN `similar` MEDIUMTEXT NULL DEFAULT NULL;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `streams` LIKE 'tmdb_id';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `streams` ADD COLUMN `tmdb_id` INT(11) NULL DEFAULT NULL;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `streams_series` LIKE 'similar';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `streams_series` ADD COLUMN `similar` MEDIUMTEXT NULL DEFAULT NULL;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'ffmpeg_cpu';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `ffmpeg_cpu` VARCHAR(8) NULL DEFAULT '4.0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'ffmpeg_gpu';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `ffmpeg_gpu` VARCHAR(8) NULL DEFAULT '4.0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `servers` LIKE 'php_version';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `servers` ADD COLUMN `php_version` INT(2) NULL DEFAULT '74';");
				CoreUtilities::$db->query("UPDATE `servers` SET `network_interface` = 'auto';");
				CoreUtilities::$db->query('SELECT `id`, `movie_properties`, `rating`, `tmdb_id` FROM `streams` WHERE `type` = 2;');

				foreach (CoreUtilities::$db->get_rows() as $rRow) {
					$rProperties = json_decode($rRow['movie_properties'], true);
					$rRating = (floatval($rProperties['rating']) ?: 0);
					$rTMDBID = ($rProperties['tmdb_id'] ?: null);

					if (!($rRow['rating'] != $rRating || $rRow['tmdb_id'] != $rTMDBID)) {
					} else {
						CoreUtilities::$db->query('UPDATE `streams` SET `rating` = ?, `tmdb_id` = ? WHERE `id` = ?;', $rRating, $rTMDBID, $rRow['id']);
					}
				}
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'header_stats';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `header_stats` TINYINT(1) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'mag_keep_extension';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `mag_keep_extension` TINYINT(1) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'show_connected_video';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `show_connected_video` TINYINT(1) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'connected_video_path';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `settings` ADD COLUMN `connected_video_path` MEDIUMTEXT NULL DEFAULT NULL;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `watch_folders` LIKE 'remove_subtitles';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `watch_folders` ADD COLUMN `remove_subtitles` TINYINT(1) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'disallow_2nd_ip_max';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `disallow_2nd_ip_max` INT(11) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'probesize_ondemand';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `probesize_ondemand` INT(11) NULL DEFAULT '256000';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'ffmpeg_warnings';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `ffmpeg_warnings` INT(11) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `mag_devices` LIKE 'theme_type';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `mag_devices` ADD COLUMN `theme_type` TINYINT(1) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'vod_sort_newest';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `vod_sort_newest` TINYINT(1) NULL DEFAULT '0';");
				CoreUtilities::$db->query('ALTER TABLE `servers` CHANGE COLUMN `domain_name` `domain_name` MEDIUMTEXT NULL DEFAULT NULL;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `streams` LIKE 'adaptive_link';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `streams` ADD COLUMN `adaptive_link` MEDIUMTEXT NULL DEFAULT NULL;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `streams` LIKE 'title_sync';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `streams` ADD COLUMN `title_sync` VARCHAR(64) NULL DEFAULT NULL;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'mag_message';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `mag_message` MEDIUMTEXT NULL DEFAULT '';");
				CoreUtilities::$db->query("UPDATE `settings` SET `mag_message` = 'You can switch between the modern and legacy themes by using the <span class=\"label\">Green</span> and <span class=\"label\">Yellow</span> buttons on your remote control. Doing so will restart your device.';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'mag_default_type';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `mag_default_type` TINYINT(1) NULL DEFAULT '0';");

				if (CoreUtilities::$rSettings['stalker_theme'] == 'xc_vm') {
					CoreUtilities::$db->query("UPDATE `settings` SET `stalker_theme` = 'default';");
					CoreUtilities::$db->query('UPDATE `mag_devices` SET `theme_type` = 0;');
				} else {
					CoreUtilities::$db->query('UPDATE `settings` SET `mag_default_type` = 1;');
					CoreUtilities::$db->query('UPDATE `mag_devices` SET `theme_type` = 1;');
				}
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `streams` LIKE 'fps_restart';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `streams` ADD COLUMN `fps_restart` TINYINT(1) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `streams` LIKE 'fps_threshold';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `streams` ADD COLUMN `fps_threshold` INT(11) NULL DEFAULT '90';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'fps_delay';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `fps_delay` INT(11) NULL DEFAULT '600';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'fps_check_type';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `fps_check_type` TINYINT(1) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'show_category_duplicates';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `show_category_duplicates` TINYINT(1) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'probe_extra_wait';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `probe_extra_wait` INT(11) NULL DEFAULT '10';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'restream_deny_unauthorised';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `restream_deny_unauthorised` TINYINT(1) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `lines` LIKE 'last_activity_array';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `lines` ADD COLUMN `last_activity_array` MEDIUMTEXT NULL DEFAULT NULL;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'extract_subtitles';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `extract_subtitles` TINYINT(1) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `users_groups` LIKE 'allow_change_bouquets';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `users_groups` ADD COLUMN `allow_change_bouquets` TINYINT(1) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'reseller_ssl_domain';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `reseller_ssl_domain` TINYINT(1) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `panel_logs` LIKE 'server_id';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('TRUNCATE `panel_logs`;');
				CoreUtilities::$db->query('ALTER TABLE `panel_logs` ADD COLUMN `server_id` INT(11) NULL DEFAULT NULL;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'auto_send_logs';");

			if (CoreUtilities::$db->num_rows() != 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` DROP COLUMN `auto_send_logs`;");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `streams_servers` LIKE 'audio_codec';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `streams_servers` ADD COLUMN `audio_codec` VARCHAR(64) NULL DEFAULT NULL;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `streams_servers` LIKE 'video_codec';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `streams_servers` ADD COLUMN `video_codec` VARCHAR(64) NULL DEFAULT NULL;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `streams_servers` LIKE 'resolution';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `streams_servers` ADD COLUMN `resolution` INT(5) NULL DEFAULT NULL;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `providers_streams` LIKE 'type';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `providers_streams` ADD COLUMN `type` VARCHAR(16) NULL DEFAULT 'live';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'disable_xmltv_restreamer';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `disable_xmltv_restreamer` TINYINT(1) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'disable_playlist_restreamer';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `disable_playlist_restreamer` TINYINT(1) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'mag_load_all_channels';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `mag_load_all_channels` TINYINT(1) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `servers` LIKE 'php_pids';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `servers` ADD COLUMN `php_pids` LONGTEXT NULL DEFAULT NULL;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'connection_sync_timer';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `connection_sync_timer` INT(11) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `servers` LIKE 'connections';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `servers` ADD COLUMN `connections` INT(16) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `servers` LIKE 'users';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `servers` ADD COLUMN `users` INT(16) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'segment_wait_time';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `segment_wait_time` INT(11) NULL DEFAULT '20';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `watch_folders` LIKE 'target_container';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `watch_folders` ADD COLUMN `target_container` VARCHAR(64) NULL DEFAULT NULL;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'total_users';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `total_users` INT(11) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'dts_legacy_ffmpeg';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `dts_legacy_ffmpeg` TINYINT(1) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'allow_cdn_access';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `allow_cdn_access` TINYINT(1) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'disable_mag_token';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `disable_mag_token` TINYINT(1) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'ondemand_balance_equal';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `ondemand_balance_equal` TINYINT(1) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'update_data';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `settings` ADD COLUMN `update_data` MEDIUMTEXT NULL DEFAULT NULL;');
			}

			CoreUtilities::$db->query("SHOW INDEXES IN `streams_series` WHERE `key_name` = 'tmdb_id';");

			if (0 >= CoreUtilities::$db->num_rows()) {
			} else {
				CoreUtilities::$db->query('ALTER TABLE `streams_series` DROP INDEX `tmdb_id`;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'dashboard_status';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `dashboard_status` TINYINT(1) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `streams_servers` LIKE 'ondemand_check';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `streams_servers` ADD COLUMN `ondemand_check` INT(16) NULL DEFAULT NULL;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'on_demand_checker';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `on_demand_checker` TINYINT(1) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'on_demand_scan_time';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `on_demand_scan_time` INT(16) NULL DEFAULT '3600';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'on_demand_max_probe';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `on_demand_max_probe` INT(16) NULL DEFAULT '5';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'on_demand_scan_keep';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `on_demand_scan_keep` INT(16) NULL DEFAULT '604800';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'parse_type';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `parse_type` VARCHAR(12) NULL DEFAULT 'ptn';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'fallback_parser';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `fallback_parser` TINYINT(1) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'alternative_titles';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `alternative_titles` TINYINT(1) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'search_items';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `search_items` INT(3) NULL DEFAULT '20';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `mag_devices` LIKE 'mac_filter';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `mag_devices` ADD COLUMN `mac_filter` VARCHAR(50) NULL DEFAULT NULL;');
				CoreUtilities::$db->query("UPDATE `mag_devices` SET `mac_filter` = REPLACE(`mac`, ':', '');");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `enigma2_devices` LIKE 'mac_filter';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `enigma2_devices` ADD COLUMN `mac_filter` VARCHAR(50) NULL DEFAULT NULL;');
				CoreUtilities::$db->query("UPDATE `enigma2_devices` SET `mac_filter` = REPLACE(`mac`, ':', '');");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'enable_search';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `enable_search` TINYINT(4) NULL DEFAULT '1';");
				echo "\n" . 'Building search indexes...' . "\n";
				CoreUtilities::$db->query("ALTER TABLE `enigma2_devices` CHANGE COLUMN `public_ip` `public_ip` VARCHAR(255) NULL DEFAULT NULL COLLATE 'utf8_general_ci';");
				CoreUtilities::$db->query('ALTER TABLE `lines` ADD FULLTEXT INDEX `search` (`username`, `admin_notes`, `reseller_notes`, `last_ip`, `contact`);');
				CoreUtilities::$db->query('ALTER TABLE `streams` ADD FULLTEXT INDEX `search` (`stream_display_name`, `stream_source`, `notes`, `channel_id`);');
				CoreUtilities::$db->query('ALTER TABLE `streams_series` ADD FULLTEXT INDEX `search` (`title`, `plot`, `cast`, `director`);');
				CoreUtilities::$db->query('ALTER TABLE `mag_devices` ADD FULLTEXT INDEX `search` (`mac_filter`, `ip`);');
				CoreUtilities::$db->query('ALTER TABLE `enigma2_devices` ADD FULLTEXT INDEX `search` (`mac_filter`, `public_ip`);');
				CoreUtilities::$db->query('ALTER TABLE `users` ADD FULLTEXT INDEX `search` (`username`, `email`, `ip`, `notes`, `reseller_dns`);');
				CoreUtilities::$db->query('ALTER TABLE `lines_divergence` CHANGE COLUMN `divergence` `divergence` INT NULL DEFAULT NULL;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `panel_logs` LIKE 'unique';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `panel_logs` ADD COLUMN `unique` VARCHAR(32) NULL DEFAULT NULL;');
				CoreUtilities::$db->query('UPDATE IGNORE `panel_logs` SET `unique` = MD5(CONCAT(`type`, `log_message`, `log_extra`, `line`));');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `servers` LIKE 'remote_status';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `servers` ADD COLUMN `remote_status` TINYINT(1) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'modal_edit';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `modal_edit` TINYINT(1) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'group_buttons';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `group_buttons` TINYINT(1) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'stop_failures';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `stop_failures` TINYINT(3) NULL DEFAULT '3';");
				CoreUtilities::$db->query('UPDATE `settings` SET `request_prebuffer` = 1 WHERE `request_prebuffer` = 2;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'restreamer_bypass_proxy';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `restreamer_bypass_proxy` TINYINT(1) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'mysql_sleep_kill';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `mysql_sleep_kill` INT(11) NULL DEFAULT '21600';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'reissues';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `settings` ADD COLUMN `reissues` MEDIUMTEXT NULL DEFAULT NULL;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `streams` LIKE 'direct_proxy';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `streams` ADD COLUMN `direct_proxy` TINYINT(1) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `watch_folders` LIKE 'server_add';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `watch_folders` ADD COLUMN `server_add` VARCHAR(512) NULL DEFAULT NULL;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `watch_folders` LIKE 'direct_proxy';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `watch_folders` ADD COLUMN `direct_proxy` TINYINT(1) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `watch_folders` LIKE 'plex_token';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `watch_folders` ADD COLUMN `plex_token` VARCHAR(512) NULL DEFAULT NULL;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'status_uuid';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `settings` ADD COLUMN `status_uuid` VARCHAR(512) NULL DEFAULT NULL;');

				if (empty(CoreUtilities::$rSettings['allowed_stb_types'])) {
				} else {
					$f883ea05d3c12657 = json_decode(CoreUtilities::$rSettings['allowed_stb_types'], true);

					if (0 >= count($f883ea05d3c12657)) {
					} else {
						if (in_array('TH100', $f883ea05d3c12657)) {
						} else {
							$f883ea05d3c12657[] = 'TH100';
						}

						if (in_array('TH200', $f883ea05d3c12657)) {
						} else {
							$f883ea05d3c12657[] = 'TH200';
						}

						CoreUtilities::$db->query('UPDATE `settings` SET `allowed_stb_types` = ?;', json_encode($f883ea05d3c12657));
					}
				}
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `servers` LIKE 'governors';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `servers` ADD COLUMN `governors` MEDIUMTEXT NULL DEFAULT NULL;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `servers` LIKE 'governor';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `servers` ADD COLUMN `governor` VARCHAR(512) NULL DEFAULT NULL;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `servers` LIKE 'sysctl';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `servers` ADD COLUMN `sysctl` MEDIUMTEXT NULL DEFAULT NULL;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `servers` LIKE 'order';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `servers` ADD COLUMN `order` INT(11) NULL DEFAULT NULL;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `users_groups` LIKE 'notice_html';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `users_groups` ADD COLUMN `notice_html` MEDIUMTEXT NULL DEFAULT NULL;');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'threshold_cpu';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `threshold_cpu` TINYINT(3) NULL DEFAULT '67';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'threshold_mem';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `threshold_mem` TINYINT(3) NULL DEFAULT '67';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'threshold_disk';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `threshold_disk` TINYINT(3) NULL DEFAULT '67';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'threshold_network';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `threshold_network` TINYINT(3) NULL DEFAULT '67';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'threshold_clients';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `threshold_clients` TINYINT(3) NULL DEFAULT '67';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'auth_flood_seconds';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `auth_flood_seconds` INT(11) NULL DEFAULT '10';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'auth_flood_limit';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `auth_flood_limit` INT(11) NULL DEFAULT '30';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'auth_flood_sleep';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `auth_flood_sleep` INT(11) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `settings` LIKE 'php_loopback';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `settings` ADD COLUMN `php_loopback` TINYINT(1) NULL DEFAULT '1';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `users_groups` LIKE 'subresellers';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('ALTER TABLE `users_groups` ADD COLUMN `subresellers` MEDIUMTEXT NULL DEFAULT NULL;');
				$rGroups = array();
				CoreUtilities::$db->query('SELECT `reseller`, `subreseller` FROM `users_subreseller`;');

				foreach (CoreUtilities::$db->get_rows() as $rRow) {
					$rGroups[$rRow['reseller']][] = intval($rRow['subreseller']);
				}

				foreach ($rGroups as $B5e902e9a043ac6b => $B37da4dc716ff8e6) {
					CoreUtilities::$db->query('UPDATE `users_groups` SET `subresellers` = ? WHERE `group_id` = ?;', '[' . implode(',', array_unique($B37da4dc716ff8e6)) . ']', $B5e902e9a043ac6b);
				}
				CoreUtilities::$db->query('DROP TABLE `users_subreseller`;');
			}

			CoreUtilities::$db->query("SHOW INDEXES IN `lines` WHERE `Key_name` = 'order_default';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query('CREATE INDEX `order_default` ON `lines` (`id`, `is_mag`, `is_e2`);');
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `servers` LIKE 'enable_gzip';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `servers` ADD COLUMN `enable_gzip` TINYINT(1) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `servers` LIKE 'limit_requests';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `servers` ADD COLUMN `limit_requests` INT(11) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SHOW COLUMNS FROM `servers` LIKE 'limit_burst';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("ALTER TABLE `servers` ADD COLUMN `limit_burst` INT(11) NULL DEFAULT '0';");
			}

			CoreUtilities::$db->query("SELECT `DATA_TYPE` FROM INFORMATION_SCHEMA.COLUMNS WHERE `TABLE_SCHEMA` = 'xc_vm' AND `TABLE_NAME` = 'servers' AND `COLUMN_NAME` = 'parent_id';");

			if (0 >= CoreUtilities::$db->num_rows()) {
			} else {
				if (CoreUtilities::$db->get_row()['DATA_TYPE'] == 'varchar') {
				} else {
					CoreUtilities::$db->query('ALTER TABLE `servers` CHANGE COLUMN `parent_id` `parent_id` TEXT NULL DEFAULT NULL;');
				}
			}

			CoreUtilities::$db->query("SELECT * FROM `crontab` WHERE `filename` = 'providers.php';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("INSERT INTO `crontab` (`filename`, `time`, `enabled`) VALUES ('providers.php', '0 * * * *', 1);");
				unlink(MAIN_HOME . 'tmp/crontab');
			}

			CoreUtilities::$db->query("SELECT * FROM `crontab` WHERE `filename` = 'redis_cache.php';");

			if (CoreUtilities::$db->num_rows() == 1) {
				CoreUtilities::$db->query("DELETE FROM `crontab` WHERE `filename` = 'redis_cache.php';");
				unlink(MAIN_HOME . 'tmp/crontab');
			}

			CoreUtilities::$db->query("SELECT * FROM `crontab` WHERE `filename` = 'detect_restream.php';");

			if (CoreUtilities::$db->num_rows() != 1) {
			} else {
				CoreUtilities::$db->query("DELETE FROM `crontab` WHERE `filename` = 'detect_restream.php';");
				unlink(MAIN_HOME . 'tmp/crontab');
			}

			CoreUtilities::$db->query("SELECT * FROM `crontab` WHERE `filename` = 'cache_engine.php';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("INSERT INTO `crontab` (`filename`, `time`, `enabled`) VALUES ('cache_engine.php', '*/5 * * * *', 1);");
				unlink(MAIN_HOME . 'tmp/crontab');
			}

			CoreUtilities::$db->query("SELECT * FROM `crontab` WHERE `filename` = 'tmdb_popular.php';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("INSERT INTO `crontab` (`filename`, `time`, `enabled`) VALUES ('tmdb_popular.php', '0 * * * *', 1);");
				exec('sudo -u xc_vm ' . MAIN_HOME . 'bin/php/bin/php ' . MAIN_HOME . 'crons/tmdb_popular.php > /dev/null 2>&1 &');
				unlink(MAIN_HOME . 'tmp/crontab');
			}

			CoreUtilities::$db->query("SELECT * FROM `crontab` WHERE `filename` = 'plex.php';");

			if (CoreUtilities::$db->num_rows() == 0) {
				CoreUtilities::$db->query("INSERT INTO `crontab` (`filename`, `time`, `enabled`) VALUES ('plex.php', '*/5 * * * *', 1);");
				unlink(MAIN_HOME . 'tmp/crontab');
			}

			CoreUtilities::$db->query("SELECT * FROM `crontab` WHERE `filename` = 'license.php';");
			if (CoreUtilities::$db->num_rows() == 1) {
				CoreUtilities::$db->query("UPDATE `crontab` SET `filename`=' update.php' WHERE `filename`='license.php'");
				unlink(MAIN_HOME . 'tmp/crontab');
			}

			CoreUtilities::$db->query("UPDATE `output_devices` SET `device_header` = REPLACE(`device_header`, ' reboot;', '') WHERE `device_filename` = 'iptv.sh' AND `device_header` LIKE '%reboot;';");
			CoreUtilities::$db->query("CREATE TABLE IF NOT EXISTS `providers` (`id` INT(11) NOT NULL AUTO_INCREMENT, `name` VARCHAR(128) NULL DEFAULT NULL, `ip` VARCHAR(128) NULL DEFAULT NULL, `port` INT(5) NULL DEFAULT '80', `username` VARCHAR(128) NULL DEFAULT NULL, `password` VARCHAR(128) NULL DEFAULT NULL, `data` MEDIUMTEXT NULL DEFAULT NULL, `last_changed` INT(11) NULL DEFAULT NULL, `legacy` TINYINT(1) NULL DEFAULT '0', `enabled` TINYINT(1) NULL DEFAULT '1', `status` TINYINT(1) NULL DEFAULT '0', `ssl` TINYINT(1) NULL DEFAULT '0', `hls` TINYINT(1) NULL DEFAULT '0', PRIMARY KEY (`id`) USING BTREE) ENGINE=InnoDB AUTO_INCREMENT=1;");
			CoreUtilities::$db->query('CREATE TABLE IF NOT EXISTS `providers_streams` (`id` INT(11) NOT NULL AUTO_INCREMENT, `type` VARCHAR(16) NULL DEFAULT NULL, `provider_id` INT(11) NULL DEFAULT NULL, `stream_id` INT(11) NULL DEFAULT NULL, `category_id` MEDIUMTEXT NULL DEFAULT NULL, `category_array` MEDIUMTEXT NULL DEFAULT NULL, `stream_display_name` MEDIUMTEXT NULL DEFAULT NULL, `stream_icon` MEDIUMTEXT NULL DEFAULT NULL, `channel_id` VARCHAR(255) NULL DEFAULT NULL, `added` INT(11) NULL DEFAULT NULL, `modified` INT(11) NULL DEFAULT NULL, PRIMARY KEY (`id`) USING BTREE, INDEX `channel_id` (`channel_id`) USING BTREE) ENGINE=InnoDB AUTO_INCREMENT=1;');
			CoreUtilities::$db->query('CREATE TABLE IF NOT EXISTS `queue` (`id` INT(11) NOT NULL AUTO_INCREMENT, `type` VARCHAR(32) NULL DEFAULT NULL, `server_id` INT(11) NULL DEFAULT NULL, `stream_id` INT(11) NULL DEFAULT NULL, `pid` INT(11) NULL DEFAULT NULL, `added` INT(11) NULL DEFAULT NULL, PRIMARY KEY (`id`) USING BTREE) ENGINE=InnoDB AUTO_INCREMENT=1;');
			CoreUtilities::$db->query('CREATE TABLE IF NOT EXISTS `lines_divergence` (`id` INT(11) NOT NULL AUTO_INCREMENT, `uuid` VARCHAR(32) NULL DEFAULT NULL, `divergence` FLOAT NULL DEFAULT NULL, PRIMARY KEY (`id`) USING BTREE, UNIQUE INDEX `uuid` (`uuid`) USING BTREE) ENGINE=InnoDB;');
			CoreUtilities::$db->query('CREATE TABLE IF NOT EXISTS `ondemand_check` (`id` INT(11) NOT NULL AUTO_INCREMENT, `stream_id` INT(11) NULL DEFAULT NULL, `server_id` INT(11) NULL DEFAULT NULL, `status` INT(1) NULL DEFAULT NULL, `source_id` INT(4) NULL DEFAULT NULL, `source_url` VARCHAR(1024) NULL DEFAULT NULL, `video_codec` VARCHAR(50) NULL DEFAULT NULL, `audio_codec` VARCHAR(50) NULL DEFAULT NULL, `resolution` VARCHAR(50) NULL DEFAULT NULL, `response` INT(11) NULL DEFAULT NULL, `fps` INT(11) NULL DEFAULT NULL, `errors` MEDIUMTEXT NULL DEFAULT NULL, `date` INT(11) NULL DEFAULT NULL, PRIMARY KEY (`id`) USING BTREE) ENGINE=InnoDB AUTO_INCREMENT=1;');
			CoreUtilities::$db->query("CREATE TABLE IF NOT EXISTS `recordings` (`id` INT(11) NOT NULL AUTO_INCREMENT, `stream_id` INT(11) NULL DEFAULT NULL, `created_id` INT(11) NULL DEFAULT NULL, `category_id` LONGTEXT NULL DEFAULT NULL, `bouquets` LONGTEXT NULL DEFAULT NULL, `title` MEDIUMTEXT NULL DEFAULT NULL, `description` MEDIUMTEXT NULL DEFAULT NULL, `stream_icon` MEDIUMTEXT NULL DEFAULT NULL, `start` INT(11) NULL DEFAULT NULL, `end` INT(11) NULL DEFAULT NULL, `source_id` INT(11) NULL DEFAULT NULL, `archive` INT(11) NULL DEFAULT NULL, `status` TINYINT(1) NULL DEFAULT '0', PRIMARY KEY (`id`) USING BTREE) ENGINE=InnoDB AUTO_INCREMENT=1;");
			CoreUtilities::$db->query('UPDATE `streams_servers` SET `parent_id` = NULL WHERE `parent_id` = 0;');
			CoreUtilities::$db->query("UPDATE `bouquets` SET `bouquet_channels` = '[]' WHERE `bouquet_channels` IS NULL;");
			CoreUtilities::$db->query("UPDATE `bouquets` SET `bouquet_movies` = '[]' WHERE `bouquet_movies` IS NULL;");
			CoreUtilities::$db->query("UPDATE `bouquets` SET `bouquet_radios` = '[]' WHERE `bouquet_radios` IS NULL;");
			CoreUtilities::$db->query("UPDATE `bouquets` SET `bouquet_series` = '[]' WHERE `bouquet_series` IS NULL;");
			CoreUtilities::$db->query("SHOW TABLES LIKE 'lines_output';");

			if (0 >= CoreUtilities::$db->num_rows()) {
			} else {
				$rOutput = array();
				CoreUtilities::$db->query('SELECT COUNT(*) AS `count` FROM `lines_output`;');
				$rCount = CoreUtilities::$db->get_row()['count'];

				if (0 >= $rCount) {
				} else {
					$rSteps = range(0, $rCount, 1000);

					if ($rSteps) {
					} else {
						$rSteps = array(0);
					}

					foreach ($rSteps as $rStep) {
						try {
							CoreUtilities::$db->query('SELECT * FROM `lines_output` LIMIT ' . $rStep . ', 1000;');
							$rResults = CoreUtilities::$db->get_rows();

							foreach ($rResults as $rResult) {
								$rOutput[$rResult['user_id']][] = $rResult['access_output_id'];
							}
						} catch (Exception $e) {
						}
					}
				}

				foreach ($rOutput as $rUserID => $rOutputs) {
					CoreUtilities::$db->query('UPDATE `lines` SET `allowed_outputs` = ? WHERE `id` = ?;', '[' . implode(',', array_map('intval', $rOutputs)) . ']', $rUserID);
				}
				CoreUtilities::$db->query('DROP TABLE `lines_output`;');
			}

			if (file_exists(MAIN_HOME . 'admin/assets/css/custom.css')) {
			} else {
				touch(MAIN_HOME . 'admin/assets/css/custom.css');
				chown(MAIN_HOME . 'admin/assets/css/custom.css', 'xc_vm');
			}

			if (file_exists(MAIN_HOME . 'admin/assets/css/custom.dark.css')) {
			} else {
				touch(MAIN_HOME . 'admin/assets/css/custom.dark.css');
				chown(MAIN_HOME . 'admin/assets/css/custom.dark.css', 'xc_vm');
			}

			shell_exec('sudo chmod 0775 ' . MAIN_HOME . 'bin/install');
		}

		if (!file_exists(MAIN_HOME . 'bin/nginx/conf/custom.conf')) {
			touch(MAIN_HOME . 'bin/nginx/conf/custom.conf');
			chown(MAIN_HOME . 'bin/nginx/conf/custom.conf', 'xc_vm');
		}

		if (!file_exists(MAIN_HOME . 'bin/nginx/conf/realip_cdn.conf')) {
			file_put_contents(MAIN_HOME . 'bin/nginx/conf/realip_cdn.conf', '');
			chown(MAIN_HOME . 'bin/nginx/conf/realip_cdn.conf', 'xc_vm');
		}

		if (file_exists(MAIN_HOME . 'bin/nginx/conf/realip_cloudflare.conf')) {
		} else {
			file_put_contents(MAIN_HOME . 'bin/nginx/conf/realip_cloudflare.conf', '');
			chown(MAIN_HOME . 'bin/nginx/conf/realip_cloudflare.conf', 'xc_vm');
		}

		if (file_exists(MAIN_HOME . 'bin/nginx/conf/realip_xc_vm.conf')) {
		} else {
			file_put_contents(MAIN_HOME . 'bin/nginx/conf/realip_xc_vm.conf', '');
			chown(MAIN_HOME . 'bin/nginx/conf/realip_xc_vm.conf', 'xc_vm');
		}

		if (file_exists(MAIN_HOME . 'bin/nginx/conf/gzip.conf') || !$rServers[SERVER_ID]['is_main']) {
		} else {
			file_put_contents(MAIN_HOME . 'bin/nginx/conf/gzip.conf', 'gzip off;');
			chown(MAIN_HOME . 'bin/nginx/conf/gzip.conf', 'xc_vm');
		}

		if (file_exists(MAIN_HOME . 'bin/nginx/conf/limit.conf')) {
		} else {
			file_put_contents(MAIN_HOME . 'bin/nginx/conf/limit.conf', '');
			chown(MAIN_HOME . 'bin/nginx/conf/limit.conf', 'xc_vm');
		}

		if (file_exists(MAIN_HOME . 'bin/nginx/conf/limit_queue.conf')) {
		} else {
			file_put_contents(MAIN_HOME . 'bin/nginx/conf/limit_queue.conf', '');
			chown(MAIN_HOME . 'bin/nginx/conf/limit_queue.conf', 'xc_vm');
		}

		shell_exec('sudo chmod 0660 ' . MAIN_HOME . 'bin/php/sockets/*');
		shell_exec('sudo chmod 0771 ' . MAIN_HOME . 'bin/daemons.sh');
		shell_exec('sudo chmod 0775 ' . MAIN_HOME . 'bin/certbot');
		shell_exec('sudo chown -R xc_vm:xc_vm ' . MAIN_HOME . 'config');
		shell_exec("sudo echo 'net.ipv4.ip_unprivileged_port_start=0' > /etc/sysctl.d/50-allports-nonroot.conf && sudo sysctl --system 2> /dev/null");
		$rSSLConfig = file_get_contents(MAIN_HOME . 'bin/nginx/conf/ssl.conf');

		if (stripos($rSSLConfig, "\n" . 'ssl_stapling on;' . "\n" . 'ssl_stapling_verify on;') !== false || stripos($rSSLConfig, "\r\n" . 'ssl_stapling on;' . "\r\n" . 'ssl_stapling_verify on;') !== false) {
			file_put_contents(MAIN_HOME . 'bin/nginx/conf/ssl.conf', str_replace("\r\n" . 'ssl_stapling on;' . "\r\n" . 'ssl_stapling_verify on;', '', str_replace("\n" . 'ssl_stapling on;' . "\n" . 'ssl_stapling_verify on;', '', $rSSLConfig)));
			$rReload = true;
		}

		foreach (array('http', 'https') as $rType) {
			$rPortConfig = file_get_contents(MAIN_HOME . 'bin/nginx/ports/' . $rType . '.conf');

			if (stripos($rPortConfig, ' reuseport') === false) {
			} else {
				file_put_contents(MAIN_HOME . 'bin/nginx/ports/' . $rType . '.conf', str_replace(' reuseport', '', $rPortConfig));
				$rReload = true;
			}
		}

		if ($rReload) {
			exec('sudo -u xc_vm ' . MAIN_HOME . 'bin/nginx/sbin/nginx -s reload');
			exec('sudo service xc_vm restart');
		}

		$rCrons = array();

		if (file_exists(CRON_PATH . 'root_signals.php')) {
			$rCrons[] = '* * * * * ' . PHP_BIN . ' ' . CRON_PATH . 'root_signals.php # XC_VM';
		}

		if (file_exists(CRON_PATH . 'root_mysql.php')) {
			$rCrons[] = '* * * * * ' . PHP_BIN . ' ' . CRON_PATH . 'root_mysql.php # XC_VM';
		}

		$rWrite = false;
		exec('sudo crontab -l', $rOutput);

		foreach ($rCrons as $rCron) {
			if (!in_array($rCron, $rOutput)) {
				$rOutput[] = $rCron;
				$rWrite = true;
			}
		}

		if ($rWrite) {
			$rCronFile = tempnam(TMP_PATH, 'crontab');
			file_put_contents($rCronFile, implode("\n", $rOutput) . "\n");
			exec('sudo chattr -i /var/spool/cron/crontabs/root');
			exec('sudo crontab -r');
			exec('sudo crontab ' . $rCronFile);
			exec('sudo chattr +i /var/spool/cron/crontabs/root');
			echo 'Root crontab installed.' . "\n\n";
		}

		$rFile = file('/etc/systemd/system.conf');
		$db731ba4eed35cdc = false;
		$f4e6be426cb0f059 = false;

		for ($i = 0; $i < count($rFile); $i++) {
			if (substr($rFile[$i], 0, 19) != 'DefaultLimitNOFILE=') {
			} else {
				$db731ba4eed35cdc = true;
			}

			if (substr($rFile[$i], 0, 23) != 'DefaultLimitNOFILESoft=') {
			} else {
				$f4e6be426cb0f059 = true;
			}
		}

		if ($db731ba4eed35cdc && $f4e6be426cb0f059) {
		} else {
			echo 'Configuration' . "\n" . '------------------------------' . "\n";
			echo 'Increasing file limit... You need to reboot your system!' . "\n\n";

			if ($db731ba4eed35cdc) {
			} else {
				shell_exec('sudo echo "' . "\n" . 'DefaultLimitNOFILE=1048576" >> "/etc/systemd/system.conf"');
				shell_exec('sudo echo "' . "\n" . 'DefaultLimitNOFILE=1048576" >> "/etc/systemd/user.conf"');
			}

			if ($f4e6be426cb0f059) {
			} else {
				shell_exec('sudo echo "' . "\n" . 'DefaultLimitNOFILESoft=1048576" >> "/etc/systemd/system.conf"');
				shell_exec('sudo echo "' . "\n" . 'DefaultLimitNOFILESoft=1048576" >> "/etc/systemd/user.conf"');
			}
		}

		if (!file_exists('/etc/init.d/xc_vm')) {
		} else {
			unlink('/etc/init.d/xc_vm');
			shell_exec('sudo systemctl daemon-reload');
		}

		if ($rServers[SERVER_ID]['is_main']) {
			foreach ($rServers as $rServerID => $rServerArray) {
				CoreUtilities::$db->query('DELETE FROM `signals` WHERE `custom_data` = ?;', json_encode(array('action' => 'update_binaries')));
				CoreUtilities::$db->query('INSERT INTO `signals`(`server_id`, `time`, `custom_data`) VALUES(?, ?, ?);', $rServerID, time(), json_encode(array('action' => 'update_binaries')));
			}
			$rConfig = file_get_contents(MAIN_HOME . 'bin/redis/redis.conf');

			if (stripos($rConfig, "\n" . 'save 60 1000') !== false) {
			} else {
				$rWrite = true;
				$rConfig .= "\n" . 'save 60 1000';
				$rConfig = str_replace('stop-writes-on-bgsave-error yes', 'stop-writes-on-bgsave-error no', $rConfig);
				echo 'Turning Redis Snapshots On!' . "\n\n";
			}

			if (stripos($rConfig, "\n" . 'save 60 1000') !== false) {
			} else {
				$rWrite = true;
				$rConfig .= "\n" . 'save 60 1000';
				echo 'Turning Redis Snapshots On' . "\n\n";
			}

			if (stripos($rConfig, 'stop-writes-on-bgsave-error yes') === false) {
			} else {
				$rWrite = true;
				$rConfig = str_replace('stop-writes-on-bgsave-error yes', 'stop-writes-on-bgsave-error no', $rConfig);
				echo 'Disabling failed write lock on Redis' . "\n\n";
			}

			if (stripos($rConfig, "\n" . 'server-threads') !== false) {
			} else {
				$rWrite = true;
				$rConfig .= "\n" . 'server-threads 4' . "\n" . 'server-thread-affinity true';
				echo 'Enabling multithreading on Redis' . "\n\n";
			}

			$rPassword = trim(explode("\n", explode("\n" . 'requirepass ', $rConfig)[1])[0]);

			if ($rPassword == '#PASSWORD#') {
				$rWrite = true;
				$rPassword = generateString(512);
				$rConfig = str_replace('#PASSWORD#', $rPassword, $rConfig);
				echo 'Generating a new Redis password' . "\n\n";
			}

			if ($rWrite) {
				file_put_contents(MAIN_HOME . 'bin/redis/redis.conf', $rConfig);
			}

			CoreUtilities::$db->query('SELECT `redis_password` FROM `settings`;');

			if (CoreUtilities::$db->get_row()['redis_password'] == $rPassword) {
			} else {
				echo 'Updating Redis password in database' . "\n";
				CoreUtilities::$db->query('UPDATE `settings` SET `redis_password` = ?;', $rPassword);
			}
		}

		if (!$rFirstRun && $rServers[SERVER_ID]['is_main']) {
			CoreUtilities::$db->query('UPDATE `servers` SET `is_main` = 0 WHERE `id` <> ?;', SERVER_ID);
			CoreUtilities::$db->query('UPDATE `servers` SET `is_main` = 1 WHERE `id` = ?;', SERVER_ID);
			CoreUtilities::$db->query('UPDATE `settings` SET `status_uuid` = ?;', md5(XC_VM_VERSION));

			if (stripos(CoreUtilities::$rSettings['server_name'], 'xtream') !== false || stripos(CoreUtilities::$rSettings['server_name'], 'zapx') !== false || stripos(CoreUtilities::$rSettings['server_name'], 'streamcreed') !== false) {
				CoreUtilities::$db->query("UPDATE `settings` SET `server_name` = 'XC_VM';");
			}

			CoreUtilities::$db->query('SELECT * FROM `access_codes` WHERE `enabled` = 1 AND `type` = 0;');
			$Dc5a760abaff4c21 = 0;
			echo 'Access Codes' . "\n" . '------------------------------' . "\n";

			foreach (CoreUtilities::$db->get_rows() as $rRow) {
				$rExists = file_exists(MAIN_HOME . 'bin/nginx/conf/codes/' . $rRow['code'] . '.conf');

				if ($rExists) {
					$Dc5a760abaff4c21++;
				}

				echo $rServers[SERVER_ID]['site_url'] . $rRow['code'] . '/' . "\n";
			}

			if ($Dc5a760abaff4c21 == 0) {
				echo 'No access codes available!' . "\n" . 'Generate a rescue code using tools' . "\n\n";
			} else {
				echo "\n";
			}

			CoreUtilities::$db->query('SELECT COUNT(`id`) AS `count` FROM `users` LEFT JOIN `users_groups` ON `users_groups`.`group_id` = `users`.`member_group_id` WHERE `status` = 1 AND `users_groups`.`is_admin` = 1;');

			if (CoreUtilities::$db->get_row()['count'] == 0) {
				echo 'No administrator users are available on the system.' . "\n" . 'Generate a rescue user with tools' . "\n\n";
			}

			echo 'Servers' . "\n" . '------------------------------' . "\n";
			$rOffline = 0;

			foreach ($rServers as $rServerID => $rServer) {
				if ($rServerID != SERVER_ID) {
					if (!(!$rServer['server_online'] && $rServer['enabled'] && $rServer['status'] != 3 && $rServer['status'] != 5)) {
					} else {
						echo 'Server #' . $rServerID . ' - ' . $rServer['server_ip'] . ' - Down since: ' . (($rServer['last_check_ago'] ? date('Y-m-d H:i:s', $rServer['last_check_ago']) : 'Always')) . "\n";
						$rOffline++;
					}
				}
			}

			if ($rOffline == 0) {
				echo 'All servers are Online and reporting back to XC_VM!' . "\n\n";
			} else {
				echo "\n";
			}

			echo 'Installed Version: ' . $rServers[SERVER_ID]['xc_vm_version'] . "\n" . '------------------------------' . "\n";
			$Df0cfbe079756478 = 0;

			foreach ($rServers as $rServerID => $rServer) {
				if ($rServerID != SERVER_ID) {
					if (!($rServer['server_type'] == 0 && $rServer['xc_vm_version'] && $rServer['xc_vm_version'] != $rServers[SERVER_ID]['xc_vm_version'])) {
					} else {
						echo 'Server #' . $rServerID . ' - ' . $rServer['server_ip'] . ' - Running v' . $rServer['xc_vm_version'] . "\n";
						$Df0cfbe079756478++;
					}
				}
			}

			if ($Df0cfbe079756478 == 0) {
				echo 'All servers are up to date!' . "\n\n";
			} else {
				echo "\n";
			}
		}

		CoreUtilities::$db->query('UPDATE `servers` SET `xc_vm_version` = ? WHERE `id` = ?;', XC_VM_VERSION, SERVER_ID);
	} else {
		exit(0);
	}
} else {
	exit('Please run as root!' . "\n");
}

function isrunning() {
	$rNginx = 0;
	exec('ps -fp $(pgrep -u xc_vm 2>/dev/null) 2>/dev/null', $rOutput, $rReturnVar);

	foreach ($rOutput as $rProcess) {
		$rSplit = explode(' ', preg_replace('!\\s+!', ' ', trim($rProcess)));

		if (!($rSplit[8] == 'nginx:' && $rSplit[9] == 'master')) {
		} else {
			$rNginx++;
		}
	}

	return 0 < $rNginx;
}

function ABc6134F1458b898() {
	CoreUtilities::$db->query('SELECT * FROM `servers`');
	$rServers = array();
	$rOnlineStatus = array(1);

	foreach (CoreUtilities::$db->get_rows() as $rRow) {
		if (empty($rRow['domain_name'])) {
			$rURL = escapeshellcmd($rRow['server_ip']);
		} else {
			$rURL = str_replace(array('http://', '/', 'https://'), '', escapeshellcmd(explode(',', $rRow['domain_name'])[0]));
		}

		if ($rRow['enable_https'] == 1) {
			$rProtocol = 'https';
		} else {
			$rProtocol = 'http';
		}

		$rPort = ($rProtocol == 'http' ? intval($rRow['http_broadcast_port']) : intval($rRow['https_broadcast_port']));
		$rRow['site_url'] = $rProtocol . '://' . $rURL . ':' . $rPort . '/';

		if ($rRow['server_type'] == 1) {
			$rLastCheckTime = 180;
		} else {
			$rLastCheckTime = 90;
		}

		$rRow['server_online'] = $rRow['enabled'] && in_array($rRow['status'], $rOnlineStatus) && time() - $rRow['last_check_ago'] <= $rLastCheckTime || SERVER_ID == $rRow['id'];
		$rServers[intval($rRow['id'])] = $rRow;
	}

	return $rServers;
}

function generateString($rLength = 10) {
	$rCharacters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789qwertyuiopasdfghjklzxcvbnm';
	$rString = '';
	$rMax = strlen($rCharacters) - 1;
	$i = 0;

	while ($i < $rLength) {
		$rString .= $rCharacters[rand(0, $rMax)];
		$i++;
	}

	return $rString;
}
